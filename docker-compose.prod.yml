version: '3.9'

services:
  db:
    image: postgres:14.2-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1s
      timeout: 1s
      retries: 10
  nginx:
    depends_on:
      - backend
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    ports:
      - "80:80"
  backend:
    env_file:
      - .env
    build:
      context: ./${PROJECT_NAME}
      dockerfile: ../docker/development/Dockerfile.backend
      args:
        - PROJECT_NAME=${PROJECT_NAME}
    ports:
      - "8000:8000"
    volumes:
      - ./${PROJECT_NAME}:/app/${PROJECT_NAME}
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - PROJECT_NAME=${PROJECT_NAME}
    depends_on:
      db:
        condition: service_healthy

volumes:
  database: